micronaut:
  server:
    port: 8080
  application:
    name: lskg
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  security:
    enabled: true
    authentication: bearer
    endpoints:
      login:
        enabled: true
        path: /api/auth/login
      oauth:
        enabled: true
        path: /api/oauth/token
        get-allowed: true
    interceptUrlMap:
      - pattern: "/**"
        httpMethod: GET
        access:
          - isAnonymous()
    token:
      generator:
        access-token:
          expiration: 3600
      jwt:
        generator:
          refresh-token:
            secret: "${JWT_GENERATOR_REFRESH_SECRET:eefe82f8-7ca6-11ea-bc55-0242ac130003}"
        signatures:
          secret:
            generator:
              secret: "${JWT_GENERATOR_SIGNATURE_SECRET:eefe82f8-7ca6-11ea-bc55-0242ac130003}"

datasources:
  default:
    url: jdbc:postgresql://localhost:5432/lskg
    driverClassName: org.postgresql.Driver
    username: root
    password: 1234
    dialect: POSTGRES
    schema-generate: CREATE
jpa:
  default:
    packages-to-scan: ovh.wpkg.lskg
    compile-time-hibernate-proxies: true
    entity-scan:
      packages:
        - ovh.wpkg.lskg
    properties:
      hibernate:
        hbm2ddl:
          auto: update
        bytecode:
          provider: none

flyway:
  datasources:
    default:
      enabled: true
